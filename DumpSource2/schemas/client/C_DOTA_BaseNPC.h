class C_DOTA_BaseNPC : public C_NextBotCombatCharacter
{
	bool m_bIsPhantom;
	uint32 m_iUnitType;
	bool m_bSelectionRingVisible;
	int32 m_iCurrentLevel;
	bool m_bIsAncient;
	bool m_bIsBossCreature;
	bool m_bStolenScepter;
	bool m_bIsNeutralUnitType;
	bool m_bSelectOnSpawn;
	bool m_bCachedReplicatedMorphlingIllusion;
	bool m_bIgnoreAddSummonedToSelection;
	bool m_bConsideredHero;
	bool m_bUsesConstantGesture;
	bool m_bUseHeroAbilityNumbers;
	bool m_bHasSharedAbilities;
	bool m_bIsSummoned;
	bool m_bCanBeDominated;
	bool m_bHasUpgradeableAbilities;
	float32 m_flHealthThinkRegen;
	uint64 m_iIsControllableByPlayer64;
	int32 m_nHealthBarOffsetOverride;
	bool m_bCanRespawn;
	int32 m_iAttackRange;
	bool m_bIsClone;
	Color m_colorGemColor;
	bool m_bHasColorGem;
	ParticleIndex_t m_nFXDeniableIndex;
	int32 m_iMoveSpeed;
	int32 m_iBaseAttackSpeed;
	float32 m_flBaseAttackTime;
	int32 m_iUnitNameIndex;
	int32 m_iHealthBarOffset;
	Color m_iHealthBarHighlightColor;
	float32 m_flMana;
	float32 m_flMaxMana;
	float32 m_flManaThinkRegen;
	int32 m_iBKBChargesUsed;
	int32 m_iAeonChargesUsed;
	GameTime_t m_flRefresherUseTime;
	float32 m_flRefresherLastCooldown;
	GameTime_t m_flLastDealtDamageTime;
	int32 m_iBotDebugData;
	bool m_bIsIllusion;
	bool m_bHasClientSeenIllusionModifier;
	CHandle< C_BaseEntity >[40] m_hAbilities;
	float32 m_flInvisibilityLevel;
	float32 m_flHullRadius;
	float32 m_flCollisionPadding;
	float32 m_flRingRadius;
	float32 m_flProjectileCollisionSize;
	CUtlSymbolLarge m_iszUnitName;
	CUtlSymbolLarge m_iszUnitNameIconOverride;
	CUtlSymbolLarge m_iszParticleFolder;
	CUtlSymbolLarge m_iszSoundSet;
	CUtlSymbolLarge m_iszSelectionGroup;
	CUtlSymbolLarge m_iszVoiceFile;
	CUtlSymbolLarge m_iszGameSoundsFile;
	CUtlSymbolLarge m_iszVoiceBackgroundSound;
	CUtlSymbolLarge m_iszIdleSoundLoop;
	CUtlString m_szUnitLabel;
	CUtlString m_szScaleset;
	uint8 m_nUnitLabelIndex;
	CUtlString m_strAnimationModifier;
	CUtlString m_TerrainSpecificFootstepEffect;
	bool m_bUseCustomTerrainWeatherEffect;
	bool m_bHasClientSoundReplacement;
	bool m_bHasClientReplacementParticle;
	bool m_bResourcesLoaded;
	GameTime_t m_flTauntCooldown;
	GameTime_t m_flTauntCooldown2;
	DOTA_SHOP_TYPE m_iCurShop;
	CUtlSymbolLarge m_szCurShopEntName;
	int32 m_iDayTimeVisionRange;
	int32 m_iNightTimeVisionRange;
	int32 m_iDamageMin;
	int32 m_iDamageMax;
	int32 m_iDamageBonus;
	int32 m_iBaseDamageMin;
	int32 m_iBaseDamageMax;
	int32 m_iTaggedAsVisibleByTeam;
	CDOTA_ModifierManager m_ModifierManager;
	C_DOTA_UnitInventory m_Inventory;
	uint64 m_nUnitState64;
	uint64 m_nUnitDebuffState;
	bool m_bHasInventory;
	int32 m_iAcquisitionRange;
	int32 m_FoWViewID;
	int32 m_iPrevHealthPct;
	int32 m_iPrevLifeState;
	int32 m_iPrevTeam;
	bool m_bPrevProvidesVision;
	uint64 m_nPrevControllableMask;
	CountdownTimer m_TagTime;
	CountdownTimer m_ClickedTime;
	GameTime_t[2] m_flIdleRunPoseStartTime;
	float32[2] m_flIdleRunPoseDuration;
	bool m_bAnimationTransitionActive;
	int32[2] m_nAnimationTransitionPoseParameters;
	int32[2] m_nAnimationTransitionInjuredPoseParameters;
	int32[2] m_nAnimationTransitionAggressivePoseParameters;
	GameTime_t m_flTimeSinceLastAbilityNag;
	int32 m_iAttackCapabilities;
	int32 m_iSpecialAbility;
	int32 m_iMoveCapabilities;
	PlayerID_t m_nPlayerOwnerID;
	GameTime_t m_flLastDamageTime;
	GameTime_t m_flLastAttackTime;
	CUtlSymbolLarge m_iszMinimapIcon;
	float32 m_flMinimapIconSize;
	bool m_bMinimapDisableTint;
	bool m_bMinimapDisableRotation;
	Color m_colorHeroGlow;
	int32 m_iNearShopMask;
	int32 m_nPoseParameterTurn;
	int32 m_nPoseParameterRun;
	float32 m_flLean;
	float32 m_flRun;
	int32 m_anglediff;
	bool m_bInfoKeyActive;
	bool m_bNewUpdateAssetModifiersNetworked;
	GameTick_t m_nAssetModifiersLastUpdatedTick;
	bool m_bSuppressGlow;
	bool m_bWasSinking;
	float32 m_flRangeDisplayDist;
	CUtlSymbolLarge m_szDefaultIdle;
	CUtlSymbolLarge m_szDefaultRareIdle;
	CountdownTimer m_damagetimer;
	Vector m_vRenderOrigin;
	float32 m_fZDelta;
	GameTime_t m_flDeathTime;
	bool m_bBaseStatsChanged;
	bool m_bNeedsSoundEmitterRefresh;
	float32 m_flPhysicalArmorValue;
	float32 m_flMagicalResistanceValue;
	int32 m_nPrevSequenceParity;
	float32 m_flPrevInvisLevel;
	CStrongHandle< InfoForResourceTypeCModel > m_nOriginalModelIndex;
	CStrongHandle< InfoForResourceTypeCModel > m_nClientOriginalModelIndex;
	CStrongHandle< InfoForResourceTypeCModel > m_nClientReplacementModelIndex;
	bool m_bClientReplacementModelNeedsRebuild;
	int32 m_nClientReplacementModelReloadCount;
	int8 m_nUnitModelVariant;
	int8 m_nUnitModelVariantCount;
	int32 m_iPrevSequence;
	char* m_pLastWeatherEffectName;
	CountdownTimer m_VoiceBackgroundSoundTimer;
	bool m_bIsWaitingToSpawn;
	int64 m_nTotalDamageTaken;
	float32 m_flManaRegen;
	float32 m_flHealthRegen;
	bool m_bIsMoving;
	float32 m_fRevealRadius;
	bool m_bCanUseWards;
	bool m_bCanUseAllItems;
	int32 m_iXPBounty;
	int32 m_iXPBountyExtra;
	int32 m_iGoldBountyMin;
	int32 m_iGoldBountyMax;
	CHandle< C_BaseEntity > m_hOwnerNPC;
	CHandle< C_BaseEntity > m_hGoalEntity;
	CHandle< C_DOTA_NeutralSpawner > m_hNeutralSpawner;
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hClientOverrideMaterial;
	bool m_bCombinerMaterialOverrideListChanged;
	int32 m_nBaseModelMeshCount;
	CUtlVector< CStrongHandleCopyable< InfoForResourceTypeIMaterial2 > > m_combinerMaterialOverrideList;
	int8 m_nArcanaLevel;
	int8 m_nDefaultArcanaLevel;
	Color m_defaultColorGemColor;
	bool m_bHasBuiltWearableSpawnList;
	bool m_bHasCostume;
	bool m_bRecreateParticleSystemsOnModifiersChange;
	float32 m_flAdditionalSinkDelay;
	int32 m_NetworkActivity;
	int32 m_PrevNetworkActivity;
	int32 m_NetworkSequenceIndex;
	bool m_bShouldDoFlyHeightVisual;
	float32 m_flStartSequenceCycle;
	CUtlVector< CUtlSymbol > m_ActivityModifiers;
	CHandle< C_SceneEntity > m_hBackgroundSceneEnt;
	CHandle< C_SceneEntity > m_hSpeakingSceneEnt;
	CUtlVector< CHandle< C_EconWearable > > m_hOldWearables;
	CUtlVector< CUtlStringToken > m_hOldWearableSkins;
	char[256] m_CustomHealthLabel;
	Color m_CustomHealthLabelColor;
	item_definition_index_t m_nWearableDefIndex;
	Color m_gibTintColor;
	bool m_bForceMaterialCombine;
	bool m_bShouldDrawParticlesWhileHidden;
	bool m_bIsClientThinkPending;
	bool m_bActivityModifiersDirty;
	bool m_bUnitModelVariantChanged;
	bool m_bWearablesAreTaunting;
	bool m_bWearablesLoadoutOverride;
	bool m_bShowCannotBeDisabledIcon;
};
