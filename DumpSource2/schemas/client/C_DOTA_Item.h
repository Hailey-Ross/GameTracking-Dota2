class C_DOTA_Item : public C_DOTABaseAbility
{
	int32 m_CastAnimation;
	bool m_bCombinable;
	bool m_bPermanent;
	bool m_bStackable;
	int32 m_iStackableMax;
	bool m_bRecipe;
	bool m_bRecipeConsumesCharges;
	int32 m_iSharability;
	bool m_bDroppable;
	bool m_bPurchasable;
	bool m_bSellable;
	bool m_bInitiallySellable;
	bool m_bForceUnsellable;
	bool m_bRequiresCharges;
	bool m_bDisplayCharges;
	bool m_bHideCharges;
	bool m_bKillable;
	bool m_bGloballyCombinable;
	bool m_bDisassemblable;
	bool m_bNeverDisassemble;
	bool m_bIsNeutralDrop;
	int32 m_nNeutralDropTeam;
	bool m_bAlertable;
	int32 m_iInitialCharges;
	bool m_bCastOnPickup;
	bool m_bOnlyPlayerHeroPickup;
	bool m_bCreepHeroPickup;
	bool m_bCanBeConsumed;
	int32 m_iValuelessCharges;
	int32 m_iCurrentCharges;
	int32 m_iSecondaryCharges;
	int32 m_iMaxCharges;
	bool m_bCombineLocked;
	GameTime_t m_flPurchaseTime;
	GameTime_t m_flAssembledTime;
	bool m_bPurchasedWhileDead;
	bool m_bCanBeUsedOutOfInventory;
	bool m_bItemEnabled;
	GameTime_t m_flEnableTime;
	GameTime_t m_flReclaimTime;
	bool m_bDisplayOwnership;
	bool m_bShowOnMinimap;
	float32 m_flMinimapIconSize;
	bool m_bIsUpgradeable;
	int32 m_nUpgradeProgress;
	int32 m_nUpgradeGoal;
	CHandle< C_BaseEntity > m_hOldOwnerEntity;
	int32 m_iOldCharges;
	PlayerID_t m_iPlayerOwnerID;
	C_NetworkUtlVectorBase< uint8 > m_vecPreGameTransferPlayerIDs;
}
