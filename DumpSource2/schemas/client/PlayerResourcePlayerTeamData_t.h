class PlayerResourcePlayerTeamData_t
{
	C_UtlVectorEmbeddedNetworkVar< DOTAThreatLevelInfo_t > m_ThreatLevelInfos;
	HeroID_t m_nSelectedHeroID;
	HeroFacetID_t m_nSelectedHeroVariant;
	int32 m_iKills;
	int32 m_iAssists;
	int32 m_iDeaths;
	int32 m_iStreak;
	int32 m_iLevel;
	int32 m_iCustomIntParam;
	int32 m_iRespawnSeconds;
	GameTime_t m_flLastBuybackTime;
	int32 m_iLastBuybackTime_Obsolete;
	CHandle< C_BaseEntity > m_hSelectedHero;
	bool m_bAFK;
	HeroID_t[4] m_nSuggestedHeroes;
	bool[4] m_bBanSuggestedHeroes;
	uint16 m_unCompendiumLevel;
	bool m_bCanRepick;
	bool m_bCanEarnRewards;
	bool m_bHasRandomed;
	HeroID_t m_nRandomedHeroID;
	bool m_bBattleBonusActive;
	uint16 m_iBattleBonusRate;
	int32 m_iCustomBuybackCost;
	Color m_CustomPlayerColor;
	bool m_bQualifiesForPAContractReward;
	bool m_bHasPredictedVictory;
	int32 m_UnitShareMasks;
	int32 m_iTeamSlot;
	uint8 m_iBattleCupWinStreak;
	uint64 m_iBattleCupWinDate;
	uint16 m_iBattleCupSkillLevel;
	uint32 m_iBattleCupTeamID;
	uint32 m_iBattleCupTournamentID;
	uint8 m_iBattleCupDivision;
	float32 m_flTeamFightParticipation;
	int32 m_iFirstBloodClaimed;
	int32 m_iFirstBloodGiven;
	uint32 m_unPickOrder;
	GameTime_t m_flTimeOfLastSaluteSent;
	C_UtlVectorEmbeddedNetworkVar< PlayerResourcePlayerEventData_t > m_vecPlayerEventData;
	uint32 m_unSelectedHeroBadgeXP;
	uint8 m_iBountyRunes;
	uint8 m_iPowerRunes;
	uint8 m_iWaterRunes;
	uint8 m_iOutpostsCaptured;
	uint8 m_unGuildTier;
	uint16 m_unGuildLevel;
	uint8 m_unGuildPrimaryColor;
	uint8 m_unGuildSecondaryColor;
	uint8 m_unGuildPattern;
	uint64 m_unGuildLogo;
	uint32 m_unGuildFlags;
	bool m_bIsPartyGuild;
	GuildID_t m_unGuildID;
	item_definition_index_t m_unHeroStickerDefIndex;
	uint8 m_eHeroStickerQuality;
	uint8 m_eLaneSelectionFlags;
	uint8 m_nPlayerDraftPreferredRoles;
	int8 m_nPlayerDraftPreferredTeam;
	uint8 m_nAvailableGifts;
	uint8 m_unFowTeam;
	uint32 m_iObsoleteEventPoints;
	uint32 m_iObsoleteEventPremiumPoints;
	uint32 m_iObsoleteEventWagerTokensRemaining;
	uint32 m_iObsoleteEventWagerTokensMax;
	uint32 m_iObsoleteEventEffectsMask;
	uint16 m_iObsoleteEventRanks;
	bool m_bObsoleteIsEventOwned;
	uint32 m_iObsoleteRankWagersAvailable;
	uint32 m_iObsoleteRankWagersMax;
	uint32 m_iObsoleteEventPointAdjustmentsRemaining;
	uint32 m_iObsoleteAvailableSalutes;
	uint32 m_iObsoleteSaluteAmounts;
}
