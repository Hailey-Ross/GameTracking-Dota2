 D typeinfo for v8::platform::DefaultForegroundTaskRunner
 D typeinfo for v8::platform::DefaultJobHandle
 D typeinfo for v8::platform::DefaultJobState
 D typeinfo for v8::platform::DefaultJobState::JobDelegate
 D typeinfo for v8::platform::DefaultPlatform
 D typeinfo for v8::platform::DefaultWorkerThreadsTaskRunner
 D typeinfo for v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread
 D typeinfo for v8::platform::WorkerThread
 D typeinfo for v8::platform::tracing::TracingController
 D vtable for v8::platform::DefaultForegroundTaskRunner
 D vtable for v8::platform::DefaultJobHandle
 D vtable for v8::platform::DefaultJobState
 D vtable for v8::platform::DefaultJobState::JobDelegate
 D vtable for v8::platform::DefaultPlatform
 D vtable for v8::platform::DefaultWorkerThreadsTaskRunner
 D vtable for v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread
 D vtable for v8::platform::WorkerThread
 D vtable for v8::platform::tracing::TracingController
 R typeinfo name for v8::platform::DefaultForegroundTaskRunner
 R typeinfo name for v8::platform::DefaultJobHandle
 R typeinfo name for v8::platform::DefaultJobState
 R typeinfo name for v8::platform::DefaultJobState::JobDelegate
 R typeinfo name for v8::platform::DefaultPlatform
 R typeinfo name for v8::platform::DefaultWorkerThreadsTaskRunner
 R typeinfo name for v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread
 R typeinfo name for v8::platform::WorkerThread
 R typeinfo name for v8::platform::tracing::TracingController
 T v8::platform::DefaultForegroundTaskRunner::DefaultForegroundTaskRunner(v8::platform::IdleTaskSupport, double (*)())
 T v8::platform::DefaultForegroundTaskRunner::HasPoppableTaskInQueue() const
 T v8::platform::DefaultForegroundTaskRunner::IdleTasksEnabled()
 T v8::platform::DefaultForegroundTaskRunner::MonotonicallyIncreasingTime()
 T v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard<v8::base::Mutex, (v8::base::NullBehavior)0> const&)
 T v8::platform::DefaultForegroundTaskRunner::NonNestableTasksEnabled() const
 T v8::platform::DefaultForegroundTaskRunner::PopTaskFromDelayedQueueLocked(v8::base::LockGuard<v8::base::Mutex, (v8::base::NullBehavior)0> const&, v8::platform::DefaultForegroundTaskRunner::Nestability*)
 T v8::platform::DefaultForegroundTaskRunner::PopTaskFromIdleQueue()
 T v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue(v8::platform::MessageLoopBehavior)
 T v8::platform::DefaultForegroundTaskRunner::PostDelayedTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double)
 T v8::platform::DefaultForegroundTaskRunner::PostDelayedTaskLocked(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double, v8::platform::DefaultForegroundTaskRunner::Nestability, v8::base::LockGuard<v8::base::Mutex, (v8::base::NullBehavior)0> const&)
 T v8::platform::DefaultForegroundTaskRunner::PostIdleTask(std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >)
 T v8::platform::DefaultForegroundTaskRunner::PostNonNestableDelayedTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double)
 T v8::platform::DefaultForegroundTaskRunner::PostNonNestableTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::DefaultForegroundTaskRunner::PostTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::DefaultForegroundTaskRunner::PostTaskLocked(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, v8::platform::DefaultForegroundTaskRunner::Nestability, v8::base::LockGuard<v8::base::Mutex, (v8::base::NullBehavior)0> const&)
 T v8::platform::DefaultForegroundTaskRunner::RunTaskScope::RunTaskScope(std::Cr::shared_ptr<v8::platform::DefaultForegroundTaskRunner>)
 T v8::platform::DefaultForegroundTaskRunner::RunTaskScope::~RunTaskScope()
 T v8::platform::DefaultForegroundTaskRunner::Terminate()
 T v8::platform::DefaultForegroundTaskRunner::WaitForTaskLocked(v8::base::LockGuard<v8::base::Mutex, (v8::base::NullBehavior)0> const&)
 T v8::platform::DefaultJobHandle::Cancel()
 T v8::platform::DefaultJobHandle::CancelAndDetach()
 T v8::platform::DefaultJobHandle::DefaultJobHandle(std::Cr::shared_ptr<v8::platform::DefaultJobState>)
 T v8::platform::DefaultJobHandle::IsActive()
 T v8::platform::DefaultJobHandle::Join()
 T v8::platform::DefaultJobHandle::UpdatePriority(v8::TaskPriority)
 T v8::platform::DefaultJobHandle::~DefaultJobHandle()
 T v8::platform::DefaultJobState::AcquireTaskId()
 T v8::platform::DefaultJobState::CallOnWorkerThread(v8::TaskPriority, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::DefaultJobState::CanRunFirstTask()
 T v8::platform::DefaultJobState::CancelAndDetach()
 T v8::platform::DefaultJobState::CancelAndWait()
 T v8::platform::DefaultJobState::CappedMaxConcurrency(unsigned long) const
 T v8::platform::DefaultJobState::DefaultJobState(v8::Platform*, std::Cr::unique_ptr<v8::JobTask, std::Cr::default_delete<v8::JobTask> >, v8::TaskPriority, unsigned long)
 T v8::platform::DefaultJobState::DidRunTask()
 T v8::platform::DefaultJobState::IsActive()
 T v8::platform::DefaultJobState::JobDelegate::GetTaskId()
 T v8::platform::DefaultJobState::JobDelegate::~JobDelegate()
 T v8::platform::DefaultJobState::Join()
 T v8::platform::DefaultJobState::NotifyConcurrencyIncrease()
 T v8::platform::DefaultJobState::ReleaseTaskId(unsigned char)
 T v8::platform::DefaultJobState::UpdatePriority(v8::TaskPriority)
 T v8::platform::DefaultJobState::~DefaultJobState()
 T v8::platform::DefaultPlatform::CallDelayedOnWorkerThread(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double)
 T v8::platform::DefaultPlatform::CallOnWorkerThread(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::DefaultPlatform::CreateJob(v8::TaskPriority, std::Cr::unique_ptr<v8::JobTask, std::Cr::default_delete<v8::JobTask> >)
 T v8::platform::DefaultPlatform::CurrentClockTimeMillis()
 T v8::platform::DefaultPlatform::DefaultPlatform(int, v8::platform::IdleTaskSupport, std::Cr::unique_ptr<v8::TracingController, std::Cr::default_delete<v8::TracingController> >)
 T v8::platform::DefaultPlatform::EnsureBackgroundTaskRunnerInitialized()
 T v8::platform::DefaultPlatform::GetForegroundTaskRunner(v8::Isolate*)
 T v8::platform::DefaultPlatform::GetPageAllocator()
 T v8::platform::DefaultPlatform::GetStackTracePrinter()
 T v8::platform::DefaultPlatform::GetTracingController()
 T v8::platform::DefaultPlatform::IdleTasksEnabled(v8::Isolate*)
 T v8::platform::DefaultPlatform::MonotonicallyIncreasingTime()
 T v8::platform::DefaultPlatform::NotifyIsolateShutdown(v8::Isolate*)
 T v8::platform::DefaultPlatform::NumberOfWorkerThreads()
 T v8::platform::DefaultPlatform::PostJob(v8::TaskPriority, std::Cr::unique_ptr<v8::JobTask, std::Cr::default_delete<v8::JobTask> >)
 T v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior)
 T v8::platform::DefaultPlatform::RunIdleTasks(v8::Isolate*, double)
 T v8::platform::DefaultPlatform::SetTimeFunctionForTesting(double (*)())
 T v8::platform::DefaultPlatform::SetTracingController(std::Cr::unique_ptr<v8::TracingController, std::Cr::default_delete<v8::TracingController> >)
 T v8::platform::DefaultPlatform::~DefaultPlatform()
 T v8::platform::DefaultWorkerThreadsTaskRunner::DefaultWorkerThreadsTaskRunner(unsigned int, double (*)())
 T v8::platform::DefaultWorkerThreadsTaskRunner::GetNext()
 T v8::platform::DefaultWorkerThreadsTaskRunner::IdleTasksEnabled()
 T v8::platform::DefaultWorkerThreadsTaskRunner::MonotonicallyIncreasingTime()
 T v8::platform::DefaultWorkerThreadsTaskRunner::PostDelayedTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double)
 T v8::platform::DefaultWorkerThreadsTaskRunner::PostIdleTask(std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >)
 T v8::platform::DefaultWorkerThreadsTaskRunner::PostTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::DefaultWorkerThreadsTaskRunner::Terminate()
 T v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run()
 T v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::WorkerThread(v8::platform::DefaultWorkerThreadsTaskRunner*)
 T v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::~WorkerThread()
 T v8::platform::DefaultWorkerThreadsTaskRunner::~DefaultWorkerThreadsTaskRunner()
 T v8::platform::DelayedTaskQueue::Append(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::DelayedTaskQueue::AppendDelayed(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double)
 T v8::platform::DelayedTaskQueue::DelayedTaskQueue(double (*)())
 T v8::platform::DelayedTaskQueue::GetNext()
 T v8::platform::DelayedTaskQueue::MonotonicallyIncreasingTime()
 T v8::platform::DelayedTaskQueue::PopTaskFromDelayedQueue(double)
 T v8::platform::DelayedTaskQueue::Terminate()
 T v8::platform::DelayedTaskQueue::~DelayedTaskQueue()
 T v8::platform::NewDefaultJobHandle(v8::Platform*, v8::TaskPriority, std::Cr::unique_ptr<v8::JobTask, std::Cr::default_delete<v8::JobTask> >, unsigned long)
 T v8::platform::NewDefaultPlatform(int, v8::platform::IdleTaskSupport, v8::platform::InProcessStackDumping, std::Cr::unique_ptr<v8::TracingController, std::Cr::default_delete<v8::TracingController> >)
 T v8::platform::NewSingleThreadedDefaultPlatform(v8::platform::IdleTaskSupport, v8::platform::InProcessStackDumping, std::Cr::unique_ptr<v8::TracingController, std::Cr::default_delete<v8::TracingController> >)
 T v8::platform::NotifyIsolateShutdown(v8::Platform*, v8::Isolate*)
 T v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior)
 T v8::platform::RunIdleTasks(v8::Platform*, v8::Isolate*, double)
 T v8::platform::TaskQueue::Append(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 T v8::platform::TaskQueue::BlockUntilQueueEmptyForTesting()
 T v8::platform::TaskQueue::GetNext()
 T v8::platform::TaskQueue::TaskQueue()
 T v8::platform::TaskQueue::Terminate()
 T v8::platform::TaskQueue::~TaskQueue()
 T v8::platform::V_NewDefaultPlatform(int)
 T v8::platform::WorkerThread::Run()
 T v8::platform::WorkerThread::WorkerThread(v8::platform::TaskQueue*)
 T v8::platform::WorkerThread::~WorkerThread()
 T v8::platform::tracing::TraceBuffer::CreateTraceBufferRingBuffer(unsigned long, v8::platform::tracing::TraceWriter*)
 T v8::platform::tracing::TraceBufferChunk::AddTraceEvent(unsigned long*)
 T v8::platform::tracing::TraceBufferChunk::Reset(unsigned int)
 T v8::platform::tracing::TraceBufferChunk::TraceBufferChunk(unsigned int)
 T v8::platform::tracing::TraceConfig::AddIncludedCategory(char const*)
 T v8::platform::tracing::TraceConfig::CreateDefaultTraceConfig()
 T v8::platform::tracing::TraceConfig::IsCategoryGroupEnabled(char const*) const
 T v8::platform::tracing::TraceObject::Initialize(char, unsigned char const*, char const*, char const*, unsigned long, unsigned long, int, char const**, unsigned char const*, unsigned long const*, std::Cr::unique_ptr<v8::ConvertableToTraceFormat, std::Cr::default_delete<v8::ConvertableToTraceFormat> >*, unsigned int, long, long)
 T v8::platform::tracing::TraceObject::InitializeForTesting(char, unsigned char const*, char const*, char const*, unsigned long, unsigned long, int, char const**, unsigned char const*, unsigned long const*, std::Cr::unique_ptr<v8::ConvertableToTraceFormat, std::Cr::default_delete<v8::ConvertableToTraceFormat> >*, unsigned int, int, int, long, long, unsigned long, unsigned long)
 T v8::platform::tracing::TraceObject::UpdateDuration(long, long)
 T v8::platform::tracing::TraceObject::~TraceObject()
 T v8::platform::tracing::TraceWriter::CreateJSONTraceWriter(std::Cr::basic_ostream<char, std::Cr::char_traits<char> >&)
 T v8::platform::tracing::TraceWriter::CreateJSONTraceWriter(std::Cr::basic_ostream<char, std::Cr::char_traits<char> >&, std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> > const&)
 T v8::platform::tracing::TracingController::AddTraceEvent(char, unsigned char const*, char const*, char const*, unsigned long, unsigned long, int, char const**, unsigned char const*, unsigned long const*, std::Cr::unique_ptr<v8::ConvertableToTraceFormat, std::Cr::default_delete<v8::ConvertableToTraceFormat> >*, unsigned int)
 T v8::platform::tracing::TracingController::AddTraceEventWithTimestamp(char, unsigned char const*, char const*, char const*, unsigned long, unsigned long, int, char const**, unsigned char const*, unsigned long const*, std::Cr::unique_ptr<v8::ConvertableToTraceFormat, std::Cr::default_delete<v8::ConvertableToTraceFormat> >*, unsigned int, long)
 T v8::platform::tracing::TracingController::AddTraceStateObserver(v8::TracingController::TraceStateObserver*)
 T v8::platform::tracing::TracingController::CurrentCpuTimestampMicroseconds()
 T v8::platform::tracing::TracingController::CurrentTimestampMicroseconds()
 T v8::platform::tracing::TracingController::GetCategoryGroupEnabled(char const*)
 T v8::platform::tracing::TracingController::GetCategoryGroupName(unsigned char const*)
 T v8::platform::tracing::TracingController::Initialize(v8::platform::tracing::TraceBuffer*)
 T v8::platform::tracing::TracingController::RemoveTraceStateObserver(v8::TracingController::TraceStateObserver*)
 T v8::platform::tracing::TracingController::StartTracing(v8::platform::tracing::TraceConfig*)
 T v8::platform::tracing::TracingController::StopTracing()
 T v8::platform::tracing::TracingController::TracingController()
 T v8::platform::tracing::TracingController::UpdateCategoryGroupEnabledFlag(unsigned long)
 T v8::platform::tracing::TracingController::UpdateCategoryGroupEnabledFlags()
 T v8::platform::tracing::TracingController::UpdateTraceEventDuration(unsigned char const*, char const*, unsigned long)
 T v8::platform::tracing::TracingController::~TracingController()
 V typeinfo for std::Cr::enable_shared_from_this<v8::platform::DefaultJobState>
 V typeinfo for v8::platform::tracing::TraceBuffer
 V typeinfo for v8::platform::tracing::TraceWriter
 V typeinfo name for std::Cr::enable_shared_from_this<v8::platform::DefaultJobState>
 V typeinfo name for v8::platform::tracing::TraceBuffer
 V typeinfo name for v8::platform::tracing::TraceWriter
 V8_Fatal(char const*, ...)
 VTT for std::Cr::basic_ostringstream<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >
 VTT for std::Cr::basic_stringstream<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 __cxa_finalize
 __gmon_start__
 __stack_chk_fail
 abort
 b completed.0
 b v8::platform::tracing::g_category_group_enabled
 bcmp
 ceilf
 d _DYNAMIC
 d _GLOBAL_OFFSET_TABLE_
 d __TMC_END__
 d __TMC_LIST__
 d __do_global_dtors_aux_fini_array_entry
 d __dso_handle
 d __frame_dummy_init_array_entry
 d typeinfo for std::Cr::__shared_ptr_emplace<v8::platform::DefaultForegroundTaskRunner, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner> >
 d typeinfo for std::Cr::__shared_ptr_emplace<v8::platform::DefaultJobState, std::Cr::allocator<v8::platform::DefaultJobState> >
 d typeinfo for std::Cr::__shared_ptr_emplace<v8::platform::DefaultWorkerThreadsTaskRunner, std::Cr::allocator<v8::platform::DefaultWorkerThreadsTaskRunner> >
 d typeinfo for v8::HighAllocationThroughputObserver
 d typeinfo for v8::JobDelegate
 d typeinfo for v8::JobHandle
 d typeinfo for v8::Platform
 d typeinfo for v8::Task
 d typeinfo for v8::TaskRunner
 d typeinfo for v8::TracingController
 d typeinfo for v8::ZoneBackingAllocator
 d typeinfo for v8::platform::DefaultJobWorker
 d typeinfo for v8::platform::tracing::JSONTraceWriter
 d typeinfo for v8::platform::tracing::TraceBufferRingBuffer
 d v8::Platform::GetHighAllocationThroughputObserver()::default_observer
 d v8::Platform::GetZoneBackingAllocator()::default_allocator
 d v8::platform::tracing::g_category_groups
 d v8::platform::tracing::g_category_index
 d vtable for std::Cr::__shared_ptr_emplace<v8::platform::DefaultForegroundTaskRunner, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner> >
 d vtable for std::Cr::__shared_ptr_emplace<v8::platform::DefaultJobState, std::Cr::allocator<v8::platform::DefaultJobState> >
 d vtable for std::Cr::__shared_ptr_emplace<v8::platform::DefaultWorkerThreadsTaskRunner, std::Cr::allocator<v8::platform::DefaultWorkerThreadsTaskRunner> >
 d vtable for v8::HighAllocationThroughputObserver
 d vtable for v8::ZoneBackingAllocator
 d vtable for v8::platform::DefaultJobWorker
 d vtable for v8::platform::tracing::JSONTraceWriter
 d vtable for v8::platform::tracing::TraceBufferRingBuffer
 free
 malloc
 memcpy
 memmove
 memset
 operator delete(void*)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 r __FRAME_END__
 r typeinfo name for std::Cr::__shared_ptr_emplace<v8::platform::DefaultForegroundTaskRunner, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner> >
 r typeinfo name for std::Cr::__shared_ptr_emplace<v8::platform::DefaultJobState, std::Cr::allocator<v8::platform::DefaultJobState> >
 r typeinfo name for std::Cr::__shared_ptr_emplace<v8::platform::DefaultWorkerThreadsTaskRunner, std::Cr::allocator<v8::platform::DefaultWorkerThreadsTaskRunner> >
 r typeinfo name for v8::HighAllocationThroughputObserver
 r typeinfo name for v8::JobDelegate
 r typeinfo name for v8::JobHandle
 r typeinfo name for v8::Platform
 r typeinfo name for v8::Task
 r typeinfo name for v8::TaskRunner
 r typeinfo name for v8::TracingController
 r typeinfo name for v8::ZoneBackingAllocator
 r typeinfo name for v8::platform::DefaultJobWorker
 r typeinfo name for v8::platform::tracing::JSONTraceWriter
 r typeinfo name for v8::platform::tracing::TraceBufferRingBuffer
 std::Cr::__next_prime(unsigned long)
 std::Cr::__shared_weak_count::__get_deleter(std::type_info const&) const
 std::Cr::__shared_weak_count::__release_weak()
 std::Cr::__shared_weak_count::lock()
 std::Cr::__shared_weak_count::~__shared_weak_count()
 std::Cr::basic_ios<char, std::Cr::char_traits<char> >::~basic_ios()
 std::Cr::basic_iostream<char, std::Cr::char_traits<char> >::~basic_iostream()
 std::Cr::basic_istream<char, std::Cr::char_traits<char> >::sentry::sentry(std::Cr::basic_istream<char, std::Cr::char_traits<char> >&, bool)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::operator<<(double)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::operator<<(int)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::operator<<(long)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::operator<<(unsigned long)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::operator<<(void const*)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::sentry::sentry(std::Cr::basic_ostream<char, std::Cr::char_traits<char> >&)
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::sentry::~sentry()
 std::Cr::basic_ostream<char, std::Cr::char_traits<char> >::~basic_ostream()
 std::Cr::basic_streambuf<char, std::Cr::char_traits<char> >::basic_streambuf()
 std::Cr::basic_streambuf<char, std::Cr::char_traits<char> >::~basic_streambuf()
 std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >::append(char const*)
 std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >::find(char, unsigned long) const
 std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >::push_back(char)
 std::Cr::basic_stringbuf<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >::str() const
 std::Cr::basic_stringbuf<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >::str(std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> > const&)
 std::Cr::ctype<char>::id
 std::Cr::ios_base::clear(unsigned int)
 std::Cr::ios_base::getloc() const
 std::Cr::ios_base::init(void*)
 std::Cr::locale::use_facet(std::Cr::locale::id&) const
 std::Cr::locale::~locale()
 strcmp
 strdup
 strlen
 t __do_global_dtors_aux
 t _fini
 t _init
 t deregister_tm_clones
 t frame_dummy
 t register_tm_clones
 t std::Cr::__deque_base<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::allocator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > > >::clear()
 t std::Cr::__deque_base<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >, std::Cr::allocator<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> > > >::clear()
 t std::Cr::__deque_base<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, std::Cr::allocator<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > >::clear()
 t std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l> std::Cr::move[abi:v16000]<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l>(std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l>, std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l>, std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l>)
 t std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l> std::Cr::move_backward[abi:v16000]<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l>(std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >**, long, 0l>, std::Cr::enable_if<__is_cpp17_random_access_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*>::value, void>::type*)
 t std::Cr::__hash_iterator<std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*> std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::find<v8::TracingController::TraceStateObserver*>(v8::TracingController::TraceStateObserver* const&)
 t std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::__node_insert_multi(std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*)
 t std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::__node_insert_multi_prepare(unsigned long, v8::TracingController::TraceStateObserver*&)
 t std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::remove(std::Cr::__hash_const_iterator<std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*>)
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultForegroundTaskRunner, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner> >::__on_zero_shared()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultForegroundTaskRunner, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner> >::__on_zero_shared_weak()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultForegroundTaskRunner, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner> >::~__shared_ptr_emplace()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultJobState, std::Cr::allocator<v8::platform::DefaultJobState> >::__on_zero_shared()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultJobState, std::Cr::allocator<v8::platform::DefaultJobState> >::__on_zero_shared_weak()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultJobState, std::Cr::allocator<v8::platform::DefaultJobState> >::~__shared_ptr_emplace()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultWorkerThreadsTaskRunner, std::Cr::allocator<v8::platform::DefaultWorkerThreadsTaskRunner> >::__on_zero_shared()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultWorkerThreadsTaskRunner, std::Cr::allocator<v8::platform::DefaultWorkerThreadsTaskRunner> >::__on_zero_shared_weak()
 t std::Cr::__shared_ptr_emplace<v8::platform::DefaultWorkerThreadsTaskRunner, std::Cr::allocator<v8::platform::DefaultWorkerThreadsTaskRunner> >::~__shared_ptr_emplace()
 t std::Cr::__split_buffer<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::allocator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*> >::push_back(std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*&&)
 t std::Cr::__split_buffer<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::allocator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*> >::push_front(std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*&&)
 t std::Cr::__split_buffer<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*, std::Cr::allocator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >*>&>::push_front(std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >* const&)
 t std::Cr::__split_buffer<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*, std::Cr::allocator<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*> >::push_back(std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*&&)
 t std::Cr::__split_buffer<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*, std::Cr::allocator<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*> >::push_front(std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*&&)
 t std::Cr::__split_buffer<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*, std::Cr::allocator<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >*>&>::push_front(std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >* const&)
 t std::Cr::__split_buffer<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*, std::Cr::allocator<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*> >::push_back(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*&&)
 t std::Cr::__split_buffer<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*, std::Cr::allocator<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*> >::push_front(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*&&)
 t std::Cr::__split_buffer<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*, std::Cr::allocator<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >*>&>::push_front(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >* const&)
 t std::Cr::__throw_bad_weak_ptr[abi:v16000]()
 t std::Cr::__tree<std::Cr::__value_type<double, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::__map_value_compare<double, std::Cr::__value_type<double, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::less<double>, true>, std::Cr::allocator<std::Cr::__value_type<double, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > > >::destroy(std::Cr::__tree_node<std::Cr::__value_type<double, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, void*>*)
 t std::Cr::__tree<std::Cr::__value_type<v8::Isolate*, std::Cr::shared_ptr<v8::platform::DefaultForegroundTaskRunner> >, std::Cr::__map_value_compare<v8::Isolate*, std::Cr::__value_type<v8::Isolate*, std::Cr::shared_ptr<v8::platform::DefaultForegroundTaskRunner> >, std::Cr::less<v8::Isolate*>, true>, std::Cr::allocator<std::Cr::__value_type<v8::Isolate*, std::Cr::shared_ptr<v8::platform::DefaultForegroundTaskRunner> > > >::destroy(std::Cr::__tree_node<std::Cr::__value_type<v8::Isolate*, std::Cr::shared_ptr<v8::platform::DefaultForegroundTaskRunner> >, void*>*)
 t std::Cr::basic_istream<char, std::Cr::char_traits<char> >& std::Cr::getline[abi:v16000]<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >(std::Cr::basic_istream<char, std::Cr::char_traits<char> >&, std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >&, char)
 t std::Cr::basic_ostream<char, std::Cr::char_traits<char> >& std::Cr::__put_character_sequence[abi:v16000]<char, std::Cr::char_traits<char> >(std::Cr::basic_ostream<char, std::Cr::char_traits<char> >&, char const*, unsigned long)
 t std::Cr::deque<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::allocator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > > >::__add_back_capacity()
 t std::Cr::deque<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::allocator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > > >::erase(std::Cr::__deque_iterator<std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > >, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > const*, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > const&, std::Cr::pair<v8::platform::DefaultForegroundTaskRunner::Nestability, std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > const* const*, long, 0l>)
 t std::Cr::deque<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> >, std::Cr::allocator<std::Cr::unique_ptr<v8::IdleTask, std::Cr::default_delete<v8::IdleTask> > > >::__add_back_capacity()
 t std::Cr::deque<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, std::Cr::allocator<std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> > > >::__add_back_capacity()
 t std::Cr::ostreambuf_iterator<char, std::Cr::char_traits<char> > std::Cr::__pad_and_output<char, std::Cr::char_traits<char> >(std::Cr::ostreambuf_iterator<char, std::Cr::char_traits<char> >, char const*, char const*, char const*, std::Cr::ios_base&, char)
 t std::Cr::pair<std::Cr::__hash_iterator<std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*>, bool> std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::__emplace_unique_key_args<v8::TracingController::TraceStateObserver*, v8::TracingController::TraceStateObserver* const&>(v8::TracingController::TraceStateObserver* const&, v8::TracingController::TraceStateObserver* const&)
 t std::Cr::vector<std::Cr::unique_ptr<v8::platform::tracing::TraceBufferChunk, std::Cr::default_delete<v8::platform::tracing::TraceBufferChunk> >, std::Cr::allocator<std::Cr::unique_ptr<v8::platform::tracing::TraceBufferChunk, std::Cr::default_delete<v8::platform::tracing::TraceBufferChunk> > > >::__append(unsigned long)
 t std::__throw_bad_array_new_length[abi:v16000]()
 t v8::HighAllocationThroughputObserver::EnterSection()
 t v8::HighAllocationThroughputObserver::LeaveSection()
 t v8::Platform::CallBlockingTaskOnWorkerThread(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 t v8::Platform::CallLowPriorityTaskOnWorkerThread(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 t v8::Platform::DumpWithoutCrashing()
 t v8::Platform::GetHighAllocationThroughputObserver()
 t v8::Platform::GetZoneBackingAllocator()
 t v8::Platform::OnCriticalMemoryPressure()
 t v8::Platform::OnCriticalMemoryPressure(unsigned long)
 t v8::TaskRunner::NonNestableDelayedTasksEnabled() const
 t v8::TaskRunner::NonNestableTasksEnabled() const
 t v8::TaskRunner::PostNonNestableDelayedTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >, double)
 t v8::TaskRunner::PostNonNestableTask(std::Cr::unique_ptr<v8::Task, std::Cr::default_delete<v8::Task> >)
 t v8::ZoneBackingAllocator::GetFreeFn() const
 t v8::ZoneBackingAllocator::GetMallocFn() const
 t v8::platform::(anonymous namespace)::DefaultTimeFunction()
 t v8::platform::(anonymous namespace)::PrintStackTrace()
 t v8::platform::DefaultForegroundTaskRunner::~DefaultForegroundTaskRunner()
 t v8::platform::DefaultJobHandle::IsValid()
 t v8::platform::DefaultJobHandle::NotifyConcurrencyIncrease()
 t v8::platform::DefaultJobHandle::UpdatePriorityEnabled() const
 t v8::platform::DefaultJobState::JobDelegate::IsJoiningThread() const
 t v8::platform::DefaultJobState::JobDelegate::NotifyConcurrencyIncrease()
 t v8::platform::DefaultJobState::JobDelegate::ShouldYield()
 t v8::platform::DefaultJobWorker::Run()
 t v8::platform::DefaultJobWorker::~DefaultJobWorker()
 t v8::platform::tracing::JSONTraceWriter::AppendArgValue(unsigned char, v8::platform::tracing::TraceObject::ArgValue)
 t v8::platform::tracing::JSONTraceWriter::AppendTraceEvent(v8::platform::tracing::TraceObject*)
 t v8::platform::tracing::JSONTraceWriter::Flush()
 t v8::platform::tracing::JSONTraceWriter::~JSONTraceWriter()
 t v8::platform::tracing::TraceBufferChunk::~TraceBufferChunk()
 t v8::platform::tracing::TraceBufferRingBuffer::AddTraceEvent(unsigned long*)
 t v8::platform::tracing::TraceBufferRingBuffer::Flush()
 t v8::platform::tracing::TraceBufferRingBuffer::GetEventByHandle(unsigned long)
 t v8::platform::tracing::TraceBufferRingBuffer::~TraceBufferRingBuffer()
 t void std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::__assign_multi<std::Cr::__hash_const_iterator<std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*> >(std::Cr::__hash_const_iterator<std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*>, std::Cr::__hash_const_iterator<std::Cr::__hash_node<v8::TracingController::TraceStateObserver*, void*>*>)
 t void std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::__do_rehash<false>(unsigned long)
 t void std::Cr::__hash_table<v8::TracingController::TraceStateObserver*, std::Cr::hash<v8::TracingController::TraceStateObserver*>, std::Cr::equal_to<v8::TracingController::TraceStateObserver*>, std::Cr::allocator<v8::TracingController::TraceStateObserver*> >::__do_rehash<true>(unsigned long)
 t void std::Cr::__pop_heap[abi:v16000]<std::Cr::_ClassicAlgPolicy, v8::platform::DefaultForegroundTaskRunner::DelayedEntryCompare, std::Cr::__wrap_iter<v8::platform::DefaultForegroundTaskRunner::DelayedEntry*> >(std::Cr::__wrap_iter<v8::platform::DefaultForegroundTaskRunner::DelayedEntry*>, std::Cr::__wrap_iter<v8::platform::DefaultForegroundTaskRunner::DelayedEntry*>, v8::platform::DefaultForegroundTaskRunner::DelayedEntryCompare&, std::Cr::iterator_traits<std::Cr::__wrap_iter<v8::platform::DefaultForegroundTaskRunner::DelayedEntry*> >::difference_type)
 t void std::Cr::__tree_balance_after_insert[abi:v16000]<std::Cr::__tree_node_base<void*>*>(std::Cr::__tree_node_base<void*>*, std::Cr::__tree_node_base<void*>*)
 t void std::Cr::__tree_remove[abi:v16000]<std::Cr::__tree_node_base<void*>*>(std::Cr::__tree_node_base<void*>*, std::Cr::__tree_node_base<void*>*)
 t void std::Cr::vector<std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >, std::Cr::allocator<std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> > > >::__push_back_slow_path<std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> > >(std::Cr::basic_string<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >&&)
 t void std::Cr::vector<std::Cr::unique_ptr<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread, std::Cr::default_delete<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread> >, std::Cr::allocator<std::Cr::unique_ptr<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread, std::Cr::default_delete<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread> > > >::__push_back_slow_path<std::Cr::unique_ptr<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread, std::Cr::default_delete<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread> > >(std::Cr::unique_ptr<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread, std::Cr::default_delete<v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread> >&&)
 t void std::Cr::vector<v8::platform::DefaultForegroundTaskRunner::DelayedEntry, std::Cr::allocator<v8::platform::DefaultForegroundTaskRunner::DelayedEntry> >::__push_back_slow_path<v8::platform::DefaultForegroundTaskRunner::DelayedEntry>(v8::platform::DefaultForegroundTaskRunner::DelayedEntry&&)
 typeinfo for std::Cr::__shared_weak_count
 typeinfo for v8::base::Thread
 v8::base::ConditionVariable::ConditionVariable()
 v8::base::ConditionVariable::NotifyAll()
 v8::base::ConditionVariable::NotifyOne()
 v8::base::ConditionVariable::Wait(v8::base::Mutex*)
 v8::base::ConditionVariable::WaitFor(v8::base::Mutex*, v8::base::TimeDelta const&)
 v8::base::ConditionVariable::~ConditionVariable()
 v8::base::Mutex::Lock()
 v8::base::Mutex::Mutex()
 v8::base::Mutex::Unlock()
 v8::base::Mutex::~Mutex()
 v8::base::OS::GetCurrentProcessId()
 v8::base::OS::GetCurrentThreadId()
 v8::base::OS::Sleep(v8::base::TimeDelta)
 v8::base::OS::TimeCurrentMillis()
 v8::base::PageAllocator::PageAllocator()
 v8::base::Semaphore::Semaphore(int)
 v8::base::Semaphore::Signal()
 v8::base::Semaphore::Wait()
 v8::base::Semaphore::~Semaphore()
 v8::base::SysInfo::NumberOfProcessors()
 v8::base::Thread::Join()
 v8::base::Thread::Start()
 v8::base::Thread::Thread(v8::base::Thread::Options const&)
 v8::base::Thread::~Thread()
 v8::base::ThreadTicks::Now()
 v8::base::TimeTicks::Now()
 v8::base::debug::DisableSignalStackDump()
 v8::base::debug::EnableInProcessStackDumping()
 v8::base::debug::StackTrace::Print() const
 v8::base::debug::StackTrace::StackTrace()
 v8::base::debug::StackTrace::~StackTrace()
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 vtable for std::Cr::basic_ostringstream<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >
 vtable for std::Cr::basic_stringbuf<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >
 vtable for std::Cr::basic_stringstream<char, std::Cr::char_traits<char>, std::Cr::allocator<char> >
